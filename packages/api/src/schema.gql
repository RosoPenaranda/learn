# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Module {
  id: String!
  name: String!
  icon: String!
  type: String!
  previousId: String
  pathId: String!
  previous: Module
  path: Path!
}

type Path {
  id: String!
  name: String!
  icon: String!
  description: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserPreferences {
  id: String!
  userId: String!
  practiceGoal: Float!
  why: String!
  codingAbility: Float!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  profileImage: String!
  userPreferences: UserPreferences
  createdAt: DateTime!
}

type LoginOutput {
  accessToken: String!
}

type Friend {
  id: String!
  user1Id: String!
  user2Id: String!
  requested: DateTime!
  status: String!
  initiator: String!
  since: DateTime
  user1: User!
  user2: User!
}

type FriendOutput {
  id: String!
  user1Id: String!
  user2Id: String!
  requested: DateTime!
  status: String!
  initiator: String!
  since: DateTime
}

type Query {
  users: [User!]!
  me: User!
  verifyToken(accessToken: String!): Boolean!
  paths: [Path!]!
  getPathByName(name: String!): Path!
  getUserFriends(userId: String!): [Friend!]!
  modules: [Module!]!
  pathModules(pathId: String!): [Module!]!
}

type Mutation {
  createUser(user: UserInput!): User!
  updatePreferences(preferences: UserPreferencesInput!): UserPreferences!
  login(password: String!, email: String!): LoginOutput!
  createPath(path: PathInput!): Path!
  joinPath(pathId: String!): Boolean!
  createFriend(friendInput: CreateFriendInput!): FriendOutput!
  confirmRejectRequest(response: String!, id: String!): Friend!
  deleteFriend(friendId: String!): Boolean!
  createModule(module: ModuleInput!): Module!
  updateModule(update: UpdateModuleInput!): Module!
  deleteModule(moduleId: String!): Boolean!
}

input UserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input UserPreferencesInput {
  practiceGoal: Float
  why: String
  codingAbility: Float
}

input PathInput {
  name: String!
  icon: String!
  description: String!
}

input CreateFriendInput {
  fromId: String!
  toId: String!
}

input ModuleInput {
  name: String!
  icon: String!
  type: String!
  previousId: String
  pathId: String!
}

input UpdateModuleInput {
  id: String!
  name: String
  icon: String
  type: ModuleType
  previousId: String
  pathId: String
}

enum ModuleType {
  assignment
  lesson
}
